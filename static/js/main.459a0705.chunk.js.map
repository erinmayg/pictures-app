{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","query","setQuery","pictures","setPictures","useEffect","axios","get","process","then","res","data","results","className","onClick","charAt","toUpperCase","substring","map","pic","alt","alt_description","src","urls","full","width","height","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAqDeA,MAjDf,WAAgB,IAAD,EACaC,mBAAS,aADtB,mBACNC,EADM,KACCC,EADD,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,KAcb,OAVAC,qBAAU,WAGRC,IACGC,IADH,UAFgB,2BAEhB,gCAEsCN,EAFtC,sBADkBO,8CAClB,cAIGC,MAAK,SAACC,GAAD,OAASN,EAAYM,EAAIC,KAAKC,cACrC,CAACX,IAGF,sBAAKY,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,SAASC,QAAS,kBAAMZ,EAAS,cAAhD,uBAGA,qBAAKW,UAAU,SAASC,QAAS,kBAAMZ,EAAS,YAAhD,qBAGA,qBAAKW,UAAU,SAASC,QAAS,kBAAMZ,EAAS,UAAhD,mBAGA,qBAAKW,UAAU,SAASC,QAAS,kBAAMZ,EAAS,SAAhD,qBAIF,+BAAKD,EAAMc,OAAO,GAAGC,cAAgBf,EAAMgB,UAAU,GAArD,eACA,sBAAKJ,UAAU,qBAAf,iBACGV,QADH,IACGA,OADH,EACGA,EAAUe,KAAI,SAACC,GAAD,OACb,qBAAKN,UAAU,OAAf,SACE,qBACEA,UAAU,cACVO,IAAKD,EAAIE,gBACTC,IAAKH,EAAII,KAAKC,KACdC,MAAM,MACNC,OAAO,SANgBP,EAAIQ,OAFnC,WCvBSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.459a0705.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [query, setQuery] = useState('mountains');\n  const [pictures, setPictures] = useState([]);\n\n  useEffect(() => {\n    const apiRoot = 'https://api.unsplash.com';\n    const accessKey = process.env.REACT_APP_ACCESS_KEY;\n    axios\n      .get(\n        `${apiRoot}/search/photos?query=${query}&client_id=${accessKey}&count=10`\n      )\n      .then((res) => setPictures(res.data.results));\n  }, [query]);\n\n  return (\n    <div className='App'>\n      <div className='button-row'>\n        <div className='button' onClick={() => setQuery('mountains')}>\n          Mountains\n        </div>\n        <div className='button' onClick={() => setQuery('beaches')}>\n          Beaches\n        </div>\n        <div className='button' onClick={() => setQuery('birds')}>\n          Birds\n        </div>\n        <div className='button' onClick={() => setQuery('food')}>\n          Food\n        </div>\n      </div>\n      <h1>{query.charAt(0).toUpperCase() + query.substring(1)} Pictures</h1>\n      <div className='pictures-container'>\n        {pictures?.map((pic) => (\n          <div className='card' key={pic.id}>\n            <img\n              className='card--image'\n              alt={pic.alt_description}\n              src={pic.urls.full}\n              width='50%'\n              height='50%'\n            ></img>\n          </div>\n        ))}\n        ;\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}